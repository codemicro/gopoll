// Code generated by qtc from "navbar.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// Standard page navbar
//

package parts

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamNavbar(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<nav class="bg-theme shadow dark:bg-gray-800">
    <div class="container px-6 py-3 mx-auto sm:flex sm:justify-between sm:items-center">
        <div class="flex items-center justify-between">
            <div>
                <a class="text-xl font-bold text-white sm:text-2xl hover:text-theme-highlight textColorTransition" href="#">GoPoll</a>
            </div>
        </div>

        <!-- Mobile Menu open: "block", Menu closed: "hidden" -->
        <div class="items-center sm:flex">
            <div class="flex flex-col sm:flex-row sm:mx-6">
                `)
	streamnavbarLink(qw422016, "#", "View poll", true)
	qw422016.N().S(`
                `)
	streamnavbarButton(qw422016, "#", "Create poll", true)
	qw422016.N().S(`
            </div>
        </div>
    </div>
</nav>
`)
}

func WriteNavbar(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamNavbar(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func Navbar() string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteNavbar(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func streamnavbarLink(qw422016 *qt422016.Writer, location, clickable string, hideOnMd bool) {
	qw422016.N().S(`
`)
	classString := "my-1 text-sm font-medium text-white textColorTransition hover:text-theme-highlight sm:mx-4 place-self-center"
	if hideOnMd {
		classString += " hidden sm:block"
	}

	qw422016.N().S(`
<a class="`)
	qw422016.N().S(classString)
	qw422016.N().S(`" href="`)
	qw422016.N().S(location)
	qw422016.N().S(`">`)
	qw422016.N().S(clickable)
	qw422016.N().S(`</a>
`)
}

func writenavbarLink(qq422016 qtio422016.Writer, location, clickable string, hideOnMd bool) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	streamnavbarLink(qw422016, location, clickable, hideOnMd)
	qt422016.ReleaseWriter(qw422016)
}

func navbarLink(location, clickable string, hideOnMd bool) string {
	qb422016 := qt422016.AcquireByteBuffer()
	writenavbarLink(qb422016, location, clickable, hideOnMd)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func streamnavbarButton(qw422016 *qt422016.Writer, location, clickable string, hideOnMd bool) {
	qw422016.N().S(`
`)
	classString := "block w-1/2 px-3 py-2 mx-1 text-sm font-medium leading-5 text-center text-white textColorTransition bg-theme-highlight rounded-md hover:bg-theme-highlight-darker sm:mx-0 sm:w-auto"
	if hideOnMd {
		classString += " hidden sm:block"
	}

	qw422016.N().S(`
<a class="`)
	qw422016.N().S(classString)
	qw422016.N().S(`" href="`)
	qw422016.N().S(location)
	qw422016.N().S(`">`)
	qw422016.N().S(clickable)
	qw422016.N().S(`</a>
`)
}

func writenavbarButton(qq422016 qtio422016.Writer, location, clickable string, hideOnMd bool) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	streamnavbarButton(qw422016, location, clickable, hideOnMd)
	qt422016.ReleaseWriter(qw422016)
}

func navbarButton(location, clickable string, hideOnMd bool) string {
	qb422016 := qt422016.AcquireByteBuffer()
	writenavbarButton(qb422016, location, clickable, hideOnMd)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
